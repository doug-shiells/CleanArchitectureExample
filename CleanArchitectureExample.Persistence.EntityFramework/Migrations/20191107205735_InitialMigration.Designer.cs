// <auto-generated />
using System;
using CleanArchitectureExample.Persistence.EntityFramework;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CleanArchitectureExample.Persistence.EntityFramework.Migrations
{
    [DbContext(typeof(CleanArchitectureExampleContext))]
    [Migration("20191107205735_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CleanArchitectureExample.Domain.Course", b =>
                {
                    b.Property<int>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CourseName")
                        .IsRequired()
                        .HasColumnName("Name")
                        .HasMaxLength(128);

                    b.Property<Guid>("PublicKey")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("RequiredUnitCount");

                    b.HasKey("CourseId");

                    b.HasAlternateKey("PublicKey")
                        .HasName("IX_Course_PublicKey_Unique");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("CleanArchitectureExample.Domain.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateOfBirth");

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasMaxLength(128);

                    b.Property<Guid>("PublicKey")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(128);

                    b.HasKey("StudentId");

                    b.HasAlternateKey("PublicKey")
                        .HasName("IX_Student_PublicKey_Unique");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("CleanArchitectureExample.Domain.StudentCourse", b =>
                {
                    b.Property<int>("StudentId");

                    b.Property<int>("CourseId");

                    b.HasKey("StudentId", "CourseId");

                    b.HasIndex("CourseId");

                    b.ToTable("StudentCourse");
                });

            modelBuilder.Entity("CleanArchitectureExample.Domain.Unit", b =>
                {
                    b.Property<int>("UnitId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CourseId");

                    b.Property<Guid>("PublicKey")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("UnitName")
                        .IsRequired()
                        .HasMaxLength(128);

                    b.HasKey("UnitId");

                    b.HasAlternateKey("PublicKey")
                        .HasName("IX_Unit_PublicKey_Unique");

                    b.HasIndex("CourseId");

                    b.ToTable("Units");
                });

            modelBuilder.Entity("CleanArchitectureExample.Domain.StudentCourse", b =>
                {
                    b.HasOne("CleanArchitectureExample.Domain.Course", "Course")
                        .WithMany("Students")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CleanArchitectureExample.Domain.Student", "Student")
                        .WithMany("Courses")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CleanArchitectureExample.Domain.Unit", b =>
                {
                    b.HasOne("CleanArchitectureExample.Domain.Course")
                        .WithMany("Units")
                        .HasForeignKey("CourseId");
                });
#pragma warning restore 612, 618
        }
    }
}
